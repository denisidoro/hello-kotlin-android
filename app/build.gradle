apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 23
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.github.denisidoro.hellokotlin"
        minSdkVersion 15
        targetSdkVersion 23
        versionName release_versions.VERSION_NAME
    }

    dexOptions {
        preDexLibraries = false
        incremental true
        javaMaxHeapSize "4g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jvmArgs '-XX:MaxPermSize=256m'
        }
    }

    /*compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }*/
    configurations.all {
        resolutionStrategy {
            force 'com.android.support:support-annotations:23.2.1'
        }
    }

    repositories {
        mavenCentral()
    }

    defaultConfig {
        applicationId "com.github.denisidoro.hellokotlin"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "0.1"
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'GENERATED_FOLDER']
            resources.srcDirs = ['src/main/resources']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
        androidTest {
            java.srcDirs = ['src/androidTest/java', 'src/sharedTest/java']
            resources.srcDirs = ['src/androidTest/resources', 'src/sharedTest/resources']
        }
        test {
            java.srcDirs = ['src/test/java', 'src/sharedTest/java']
            resources.srcDirs = ['src/test/resources', 'src/sharedTest/resources']
        }
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    productFlavors {

        production {
            dimension "production"
            versionCode release_versions.VERSION_CODE_PROD
            applicationId "com.github.denisidoro.hellokotlin"
        }

        beta {
            dimension "beta"
            versionCode release_versions.VERSION_CODE_BETA
            applicationId "com.github.denisidoro.hellokotlin.beta"
        }

        staging {
            dimension "staging"
            versionCode release_versions.VERSION_CODE_STAGING
            applicationId "com.github.denisidoro.hellokotlin.staging_alpha"
        }

    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

}

buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://jcenter.bintray.com" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.21.6'
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin"
    }

}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    // Support
    compile libraries.supportV4
    compile libraries.supportAppCompatV7
    compile libraries.supportRecyclerView
    compile libraries.supportDesign
    compile libraries.javaxAnnotation

    // RxJava
    compile libraries.rxAndroid
    compile libraries.rxJava

    // Json
    compile libraries.gson

    // Http
    compile libraries.okhttp

    // Dependency injection
    compile libraries.dagger
    apt libraries.daggerCompiler
    testApt libraries.daggerCompiler
    androidTestApt libraries.daggerCompiler

    // Kotlin
    compile libraries.kotlin
    testCompile libraries.kotlinJUnitTest

    // Runner
    androidTestCompile libraries.runner
    androidTestCompile libraries.rules

    // Design pattern
    compile libraries.anvil
    compile libraries.reduks
    compile libraries.reduksRx
    compile libraries.reduksAndroid

    /* Testing

    // Espresso
    androidTestCompile libraries.espressoCore
    androidTestCompile libraries.espressoIntents
    androidTestCompile(libraries.espressoContrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    // Dexmaker
    androidTestCompile libraries.dexmaker
    androidTestCompile libraries.dexmakerDx
    androidTestCompile libraries.dexmakerMockito

    // Mockito
    testCompile libraries.mockito
    androidTestCompile libraries.mockito

    // JUnit
    testCompile libraries.junit
    */

}
